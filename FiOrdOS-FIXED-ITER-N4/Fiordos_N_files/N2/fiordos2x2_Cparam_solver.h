/**
 * This file is generated by FiOrdOs, a program licensed under GPL
 * by copyright holder Automatic Control Laboratory, ETH Zurich.
 * 
 * If you are interested in using this file commercially,
 * please contact the copyright holder.
 */

#ifndef FIORDOS2X2_CPARAM_SOLVER_H
#define FIORDOS2X2_CPARAM_SOLVER_H

#ifdef USE_REALTYPE_SINGLE
  typedef float realtype;
#else
  typedef double realtype;
#endif

/* <<< struct Params >>> */
#if defined(USE_PARAMSMODE_PTR)  && !(defined(MATLAB_MEX_FILE) || defined(RT))
#  define PARAMS_MACRO(name,len) const realtype *name;
#else /* the default */
#  define PARAMS_MACRO(name,len) realtype name[len];
#endif
typedef struct {
    PARAMS_MACRO(H,4)
    PARAMS_MACRO(g,2)
    PARAMS_MACRO(Ai,24)
    PARAMS_MACRO(bi,12)
} fiordos2x2_Cparam_Params;
#undef PARAMS_MACRO

/* <<< struct Settings >>> */
typedef struct {
    struct {
        int warmstartInner;
    } approach;
    struct {
        realtype init[2];
        int maxit;
    } algoInner;
    struct {
        realtype init[12];
        int maxit;
    } algoOuter;
} fiordos2x2_Cparam_Settings;

/* <<< struct Result >>> */
typedef struct {
    realtype la[12];
    realtype x[2];
    realtype d;
    int iter;
    int exitflag;
} fiordos2x2_Cparam_Result;

/* <<< struct Work >>> */
typedef struct {
    struct {
        realtype inner_g[2];
        realtype inner_c[1];
        realtype traceH0[1];
    } Prob;
    struct {
        realtype init[2];
        realtype glob_LbL;
        realtype glob_UbL;
        realtype tstep;
        int btnum;
        realtype tstepmin;
        int btstopped;
        realtype res_z[2];
        int res_stopcode;
        int res_iter;
    } algoInner;
    struct {
        realtype init[12];
        realtype glob_LbL;
        realtype glob_UbL;
        realtype tstep;
        int btnum;
        realtype tstepmin;
        int btstopped;
        realtype res_z[12];
        int res_stopcode;
        int res_iter;
    } algoOuter;
} fiordos2x2_Cparam_Work;

/* <<< solver INTERFACE >>> */
void fiordos2x2_Cparam_init(fiordos2x2_Cparam_Params *params, fiordos2x2_Cparam_Settings *settings, fiordos2x2_Cparam_Result *result, fiordos2x2_Cparam_Work *work);
void fiordos2x2_Cparam_solve(fiordos2x2_Cparam_Params *params, fiordos2x2_Cparam_Settings *settings, fiordos2x2_Cparam_Result *result, fiordos2x2_Cparam_Work *work);
#endif
